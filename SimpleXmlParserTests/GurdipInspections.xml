<?xml version="1.0" encoding="utf-8"?><InspectionsExport><InspectionTypes><InspectionTypeInfo Id="Avoid types too big" Name="Critical: Avoid types too big" Category="Code Smells"><Description><![CDATA[• <i>Rule Description:</i><br> This rule matches types with more than 200 lines of code. <b>Only lines of code in JustMyCode methods are taken account.</b></br></br>
Types where <i>NbLinesOfCode &gt; 200</i> are extremely complex to develop and maintain. See the definition of the NbLinesOfCode metric here <a href="https://www.ndepend.com/docs/code-metrics#NbLinesOfCode">https://www.ndepend.com/docs/code-metrics#NbLinesOfCode</a></br></br>
Maybe you are facing the <b>God Class</b> phenomenon: A <b>God Class</b> is a class that controls way too many other classes in the system and has grown beyond all logic to become <i>The Class That Does Everything</i>. <hr> <br>• <i>How to Fix Issues:</i><br> Types with many lines of code should be split in a group of smaller types.</br></br>
To refactor a <i>God Class</i> you'll need patience, and you might even need to recreate everything from scratch. Here are a few refactoring advices:</br></br>
• The logic in the <i>God Class</i> must be split in smaller classes. These smaller classes can eventually become private classes nested in the original <i>God Class</i>, whose instances objects become composed of instances of smaller nested classes.</br></br>
• Smaller classes partitioning should be driven by the multiple responsibilities handled by the <i>God Class</i>. To identify these responsibilities it often helps to look for subsets of methods strongly coupled with subsets of fields.</br></br>
• If the <i>God Class</i> contains way more logic than states, a good option can be to define one or several static classes that contains no static field but only pure static methods. A pure static method is a function that computes a result only from inputs parameters, it doesn't read nor assign any static or instance field. The main advantage of pure static methods is that they are easily testable.</br></br>
• Try to maintain the interface of the <i>God Class</i> at first and delegate calls to the new extracted classes. In the end the <i>God Class</i> should be a pure facade without its own logic. Then you can keep it for convenience or throw it away and start to use the new classes only.</br></br>
• Unit Tests can help: write tests for each method before extracting it to ensure you don't break functionality.</br></br>
The estimated Debt, which means the effort to fix such issue, varies linearly from 1 hour for a 200 lines of code type, up to 10 hours for a type with 2.000 or more lines of code.</br></br>
In Debt and Interest computation, this rule takes account of the fact that static types with no mutable fields are just a collection of static methods that can be easily split and moved from one type to another.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Avoid types with too many fields" Name="Avoid types with too many fields" Category="Code Smells"><Description><![CDATA[• <i>Rule Description:</i><br> This rule matches types with more than 15 fields. Such type might be hard to understand and maintain.</br></br>
Notice that constant fields and static-readonly fields are not counted. Enumerations types are not counted also.</br></br>
Having many fields for a type might be a symptom of too many responsibilities implemented. <hr> <br>• <i>How to Fix Issues:</i><br> To refactor such type and increase code quality and maintainability, certainly you'll have to group subsets of fields into smaller types and dispatch the logic implemented into the methods into these smaller types.</br></br>
More refactoring advices can be found in the default rule <b>Types to Big</b>, <i>HowToFix</i> section.</br></br>
The estimated Debt, which means the effort to fix such issue, varies linearly from 1 hour for a type with 15 fields, to up to 10 hours for a type with 200 or more fields.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Avoid methods with too many parameters" Name="Critical: Avoid methods with too many parameters" Category="Code Smells"><Description><![CDATA[• <i>Rule Description:</i><br> This rule matches methods with 7 or more parameters. Such method is painful to call and might degrade performance. See the definition of the <i>NbParameters</i> metric here: <a href="https://www.ndepend.com/docs/code-metrics#NbParameters">https://www.ndepend.com/docs/code-metrics#NbParameters</a></br></br>
This rule doesn't match a method that overrides a third-party method with 7 or more parameters because such situation is the consequence of a lower-level problem.</br></br>
For the same reason, this rule doesn't match a constructor that calls a base constructor with 7 or more parameters. <hr> <br>• <i>How to Fix Issues:</i><br> More properties/fields can be added to the declaring type to handle numerous states. An alternative is to provide a class or a structure dedicated to handle arguments passing. For example see the class <i>System.Diagnostics.ProcessStartInfo</i> and the method <i>System.Diagnostics.Process.Start(ProcessStartInfo)</i>.</br></br>
The estimated Debt, which means the effort to fix such issue, varies linearly from 1 hour for a method with 7 parameters, up to 6 hours for a methods with 40 or more parameters.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Avoid methods potentially poorly commented" Name="Avoid methods potentially poorly commented" Category="Code Smells"><Description><![CDATA[• <i>Rule Description:</i><br> This rule matches methods with less than 10% of comment lines and that have at least 20 lines of code. Such method might need to be more commented.</br></br>
See the definitions of the <i>Comments metric</i> here: <a href="https://www.ndepend.com/docs/code-metrics#PercentageComment">https://www.ndepend.com/docs/code-metrics#PercentageComment</a> <a href="https://www.ndepend.com/docs/code-metrics#NbLinesOfComment">https://www.ndepend.com/docs/code-metrics#NbLinesOfComment</a></br></br>
Notice that only comments about the method implementation (comments in method body) are taken account. <hr> <br>• <i>How to Fix Issues:</i><br> Typically add more comment. But code commenting is subject to controversy. While poorly written and designed code would needs a lot of comment to be understood, clean code doesn't need that much comment, especially if variables and methods are properly named and convey enough information. Unit-Test code can also play the role of code commenting.</br></br>
However, even when writing clean and well-tested code, one will have to write <b>hacks</b> at a point, usually to circumvent some API limitations or bugs. A hack is a non-trivial piece of code, that doesn't make sense at first glance, and that took time and web research to be found. In such situation comments must absolutely be used to express the intention, the need for the hacks and the source where the solution has been found.</br></br>
The estimated Debt, which means the effort to comment such method, varies linearly from 2 minutes for 10 lines of code not commented, up to 20 minutes for 200 or more, lines of code not commented.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Avoid types with poor cohesion" Name="Avoid types with poor cohesion" Category="Code Smells"><Description><![CDATA[• <i>Rule Description:</i><br> This rule is based on the <i>LCOM code metric</i>, LCOM stands for <b>Lack Of Cohesion of Methods</b>. See the definition of the LCOM metric here <a href="https://www.ndepend.com/docs/code-metrics#LCOM">https://www.ndepend.com/docs/code-metrics#LCOM</a></br></br>
The LCOM metric measures the fact that most methods are using most fields. A class is considered utterly cohesive (which is good) if all its methods use all its instance fields.</br></br>
Only types with enough methods and fields are taken account to avoid bias. The LCOM takes its values in the range [0-1].</br></br>
This rule matches types with LCOM higher than 0.8. Such value generally pinpoints a <b>poorly cohesive class</b>. <hr> <br>• <i>How to Fix Issues:</i><br> To refactor a poorly cohesive type and increase code quality and maintainability, certainly you'll have to split the type into several smaller and more cohesive types that together, implement the same logic.</br></br>
The estimated Debt, which means the effort to fix such issue, varies linearly from 5 minutes for a type with a low poorCohesionScore, up to 4 hours for a type with high poorCohesionScore.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Class with no descendant should be sealed if possible" Name="Class with no descendant should be sealed if possible" Category="Object Oriented Design"><Description><![CDATA[• <i>Rule Description:</i><br> If a <i>non-static</i> class isn't declared with the keyword <i>sealed</i>, it means that it can be subclassed everywhere the <i>non-sealed</i> class is visible.</br></br>
Making a class a <i>base class</i> requires significant design effort. Subclassing a <i>non-sealed</i> class, not initially designed to be subclassed, will lead to unanticipated design issue.</br></br>
Most classes are <i>non-sealed</i> because developers don't care about the keyword <i>sealed</i>, not because the primary intention was to write a class that can be subclassed.</br></br>
There are performance gain in declaring a class as <i>sealed</i>. See a benchmark here: <a href="https://www.meziantou.net/performance-benefits-of-sealed-class.htm">https://www.meziantou.net/performance-benefits-of-sealed-class.htm</a></br></br>
But the real benefit of doing so, is actually to <b>express the intention</b>: <i>this class has not be designed to be a base class, hence it is not allowed to subclass it</i>.</br></br>
Notice that by default this rule doesn't match <i>public</i> class to avoid matching classes that are intended to be sub-classed by third-party code using your library. If you are developing an application and not a library, just uncomment the clause <i>!t.IsPubliclyVisible</i>. <hr> <br>• <i>How to Fix Issues:</i><br> For each matched class, take the time to assess if it is really meant to be subclassed. Certainly most matched class will end up being declared as <i>sealed</i>.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="A stateless class or structure might be turned into a static type" Name="A stateless class or structure might be turned into a static type" Category="Object Oriented Design"><Description><![CDATA[• <i>Rule Description:</i><br> This rule matches classes and structures that are not static, nor generic, that doesn't have any instance fields, that doesn't implement any interface nor has a base class (different than <i>System.Object</i>).</br></br>
Such class or structure is a <i>stateless</i> collection of <i>pure</i> functions, that doesn't act on any <i>this</i> object data. Such collection of <i>pure</i> functions is better hosted in a <b>static class</b>. Doing so simplifies the client code that doesn't have to create an object anymore to invoke the <i>pure</i> functions. <hr> <br>• <i>How to Fix Issues:</i><br> Declare all methods as <i>static</i> and transform the class or structure into a <i>static</i> class.</br></br>
By default issues of this rule have a <b>Low</b> severity because they reflect more an advice than a problem.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Non-static classes should be instantiated or turned to static" Name="Non-static classes should be instantiated or turned to static" Category="Object Oriented Design"><Description><![CDATA[• <i>Rule Description:</i><br> If the constructors of a class are never called, the class is never instantiated, and should be defined as a <i>static class</i>.</br></br>
However this rule doesn't match instantiation through reflection. As a consequence, plug-in root classes, instantiated through reflection via <i>IoC frameworks</i>, can be <i>false positives</i> for this rule.</br></br>
This rule doesn't match also classes instantiated by the ASP.NET infrastructure, ASP.NET view model classes and Entity Framework ModelSnapshot, DbContext and Migration classes.</br></br>
Notice that by default this rule matches also <i>public</i> class. If you are developing a framework with classes that are intended to be instantiated by your clients, just uncomment the line <i>!t.IsPublic</i>. <hr> <br>• <i>How to Fix Issues:</i><br> First it is important to investigate why the class is never instantiated. If the reason is <i>the class hosts only static methods</i> then the class can be safely declared as <i>static</i>.</br></br>
Others reasons like, <i>the class is meant to be instantiated via reflection</i>, or <i>is meant to be instantiated only by client code</i> should lead to adapt this rule code to avoid these matches.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Methods should be declared static if possible" Name="Methods should be declared static if possible" Category="Object Oriented Design"><Description><![CDATA[• <i>Rule Description:</i><br> When an instance method can be <i>safely</i> declared as static you should declare it as static.</br></br>
Whenever you write a method, you fulfill a contract in a given scope. The narrower the scope is, the smaller the chance is that you write a bug.</br></br>
When a method is static, you can't access non-static members; hence, your scope is narrower. So, if you don't need and will never need (even in subclasses) instance fields to fulfill your contract, why give access to these fields to your method? Declaring the method static in this case will let the compiler check that you don't use members that you do not intend to use.</br></br>
Declaring a method as static if possible is also good practice because clients can tell from the method signature that calling the method can't alter the object's state.</br></br>
Doing so, is also a micro performance optimization, since a static method is a bit cheaper to invoke than an instance method, because the <i>this</i> reference* doesn't need anymore to be passed.</br></br>
Notice that if a matched method is a handler, bound to an event through code generated by a designer, declaring it as static might break the designer generated code, if the generated code use the <i>this</i> invocation syntax, (like <i>this.Method()</i>). <hr> <br>• <i>How to Fix Issues:</i><br> Declare matched methods as static.</br></br>
Since such method doesn't use any instance fields and methods of its type and base-types, you should consider if it makes sense, to move such a method to a static utility class.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Avoid namespaces with few types" Name="Avoid namespaces with few types" Category="Design"><Description><![CDATA[• <i>Rule Description:</i><br> This rule warns about namespaces other than the global namespace that contain less than five types.</br></br>
Make sure that each of your namespaces has a logical organization and that a valid reason exists to put types in a sparsely populated namespace.</br></br>
Namespaces should contain types that are used together in most scenarios. When their applications are mutually exclusive, types should be located in separate namespaces. For example, the <i>System.Web.UI</i> namespace contains types that are used in Web applications, and the <i>System.Windows.Forms</i> namespace contains types that are used in Windows-based applications. Even though both namespaces have types that control aspects of the user interface, these types are not designed for use in the same application. Therefore, they are located in separate namespaces.</br></br>
Careful namespace organization can also be helpful because it increases the discoverability of a feature. By examining the namespace hierarchy, library consumers should be able to locate the types that implement a feature.</br></br>
Notice that this rule source code contains a list of common infrastructure namespace names that you can complete. Namespaces with ending name component in this list are not matched. <hr> <br>• <i>How to Fix Issues:</i><br> To fix a violation of this rule, try to combine namespaces that contain just a few types into a single namespace.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Nested types should not be visible" Name="Nested types should not be visible" Category="Design"><Description><![CDATA[• <i>Rule Description:</i><br> This rule warns about nested types not declared as private.</br></br>
A nested type is a type declared within the scope of another type. Nested types are useful for encapsulating private implementation details of the containing type. Used for this purpose, nested types should not be externally visible.</br></br>
Do not use externally visible nested types for logical grouping or to avoid name collisions; instead use namespaces.</br></br>
Nested types include the notion of member accessibility, which some programmers do not understand clearly.</br></br>
Nested types declared as protected can be used in subclasses. <hr> <br>• <i>How to Fix Issues:</i><br> If you do not intend the nested type to be externally visible, change the type's accessibility.</br></br>
Otherwise, remove the nested type from its parent and make it <i>non-nested</i>.</br></br>
If the purpose of the nesting is to group some nested types, use a namespace to create the hierarchy instead.</br></br>
The estimated Debt, which means the effort to fix such issue, is 2 minutes per nested type plus 4 minutes per outter type using such nesting type.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Instances size shouldn't be too big" Name="Instances size shouldn't be too big" Category="Design"><Description><![CDATA[• <i>Rule Description:</i><br> Types where <i>SizeOfInst &gt; 128</i> might degrade performance if many instances are created at runtime. They can also be hard to maintain.</br></br>
Notice that a class with a large <i>SizeOfInst</i> value doesn't necessarily have a lot of instance fields. It might derive from a class with a large <i>SizeOfInst</i> value.</br></br>
This query doesn't match types that represent WPF and WindowsForm forms and controls nor Entity Framework special classes.</br></br>
Some other namespaces like <i>System.ComponentModel</i> or <i>System.Xml</i> have base classes that typically imply large instances size so this rule doesn't match these situations.</br></br>
This rule doesn't match custom <i>DevExpress</i> component and it is easy to modify this rule ro append other component vendors to avoid false positives.</br></br>
See the definition of the <i>SizeOfInst</i> metric here <a href="https://www.ndepend.com/docs/code-metrics#SizeOfInst">https://www.ndepend.com/docs/code-metrics#SizeOfInst</a> <hr> <br>• <i>How to Fix Issues:</i><br> A type with a large <i>SizeOfInst</i> value hold <i>directly</i> a lot of data. Typically, you can group this data into smaller types that can then be composed.</br></br>
The estimated Debt, which means the effort to fix such issue, varies linearly from severity <b>Medium</b> for 128 bytes per instance to twice interests for severity <b>High</b> for 2048 bytes per instance.</br></br>
The estimated annual interest of issues of this rule is 10 times higher for structures, because large structures have a significant performance cost. Indeed, each time such structure <i>value</i> is passed as a method parameter it gets copied to a new local variable (note that the word <i>value</i> is more appropriate than the word <i>instance</i> for structures). For this reason, such structure should be declared as class.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Attribute classes should be sealed" Name="Attribute classes should be sealed" Category="Design"><Description><![CDATA[• <i>Rule Description:</i><br> The .NET Framework class library provides methods for retrieving custom attributes. By default, these methods search the attribute inheritance hierarchy; for example <i>System.Attribute.GetCustomAttribute()</i> searches for the specified attribute type, or any attribute type that extends the specified attribute type.</br></br>
Sealing the attribute eliminates the search through the inheritance hierarchy, and can improve performance. <hr> <br>• <i>How to Fix Issues:</i><br> To fix a violation of this rule, seal the attribute type or make it abstract.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Do implement methods that throw NotImplementedException" Name="Do implement methods that throw NotImplementedException" Category="Design"><Description><![CDATA[• <i>Rule Description:</i><br> The exception <i>NotImplementedException</i> is used to declare a method <i>stub</i> that can be invoked, and defer the development of the method implementation.</br></br>
This exception is especially useful when doing <b>TDD</b> (<i>Test Driven Development</i>) when tests are written first. This way tests fail until the implementation is written.</br></br>
Hence using <i>NotImplementedException</i> is a <i>temporary</i> facility, and before releasing, will come a time when this exception shouldn't be used anywhere in code.</br></br>
<i>NotImplementedException</i> should not be used permanently to mean something like <i>this method should be overriden</i> or <i>this implementation doesn't support this facility</i>. Artefact like <i>abstract method</i> or <i>abstract class</i> should be used instead, to favor a <i>compile time</i> error over a <i>run-time</i> error.</br></br>
This rule warns about method still using <i>NotImplementedException</i>. <hr> <br>• <i>How to Fix Issues:</i><br> Investigate why <i>NotImplementedException</i> is still thrown.</br></br>
Such issue has a <b>High</b> severity if the method code consists only in throwing <i>NotImplementedException</i>. Such situation means either that the method should be implemented, either that what should be a <i>compile time</i> error is a <i>run-time</i> error <i>by-design</i>, and this is not good design. Sometime this situation also pinpoints a method stub that can be safely removed.</br></br>
If <i>NotImplementedException</i> is thrown from a method with significant logic, the severity is considered as <b>Medium</b>, because often the fix consists in throwing another exception type, like <b>InvalidOperationException</b>.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Assemblies with poor cohesion (RelationalCohesion)" Name="Assemblies with poor cohesion (RelationalCohesion)" Category="Architecture"><Description><![CDATA[• <i>Rule Description:</i><br> This rule computes the <i>Relational Cohesion</i> metric for the application assemblies, and warns about wrong values.</br></br>
The <i>Relational Cohesion</i> for an assembly, is the total number of relationship between types of the assemblies, divided by the number of types. In other words it is the average number of types in the assembly used by a type in the assembly.</br></br>
As classes inside an assembly should be strongly related, the cohesion should be high. On the other hand, a value which is too high may indicate over-coupling. A good range for <i>Relational Cohesion</i> is <b>1.5 to 4.0</b>.</br></br>
Notice that assemblies with less than 20 types are ignored. <hr> <br>• <i>How to Fix Issues:</i><br> Matches of this present rule might reveal either assemblies with specific coding constraints (like code generated that have particular structure) either issues in design.</br></br>
In the second case, large refactoring can be planned not to respect this rule in particular, but to increase the overall design and code maintainability.</br></br>
The severity of issues of this rule is <b>Low</b> because the code metric <i>Relational Cohesion</i> is an information about the code structure state but <b>is not actionable</b>, it doesn't tell precisely what to do obtain a better score.</br></br>
Fixing actionable issues of others <b>Architecture</b> and <b>Code Smells</b> default rules will necessarily increase the <i>Relational Cohesion</i> scores.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Namespaces with poor cohesion (RelationalCohesion)" Name="Namespaces with poor cohesion (RelationalCohesion)" Category="Architecture"><Description><![CDATA[• <i>Rule Description:</i><br> This rule computes the <i>Relational Cohesion</i> metric for the application namespaces, and warns about wrong values.</br></br>
The <i>Relational Cohesion</i> for a namespace, is the total number of relationship between types of the namespaces, divided by the number of types. In other words it is the average number of types in the namespace used by a type in the namespace.</br></br>
As classes inside a namespace should be strongly related, the cohesion should be high. On the other hand, a value which is too high may indicate over-coupling. A good range for <i>Relational Cohesion</i> is <b>1.5 to 4.0</b>.</br></br>
Notice that namespaces with less than 20 types are ignored. <hr> <br>• <i>How to Fix Issues:</i><br> Matches of this present rule might reveal either namespaces with specific coding constraints (like code generated that have particular structure) either issues in design.</br></br>
In the second case, refactoring sessions can be planned to increase the overall design and code maintainability.</br></br>
You can get an overview of class coupling for a matched namespace by exporting the <i>ChildTypes</i> to the graph. (Right click the <i>ChildTypes</i> cells)</br></br>
The severity of issues of this rule is <b>Low</b> because the code metric <i>Relational Cohesion</i> is an information about the code structure state but <b>is not actionable</b>, it doesn't tell precisely what to do obtain a better score.</br></br>
Fixing actionable issues of others <b>Architecture</b> and <b>Code Smells</b> default rules will necessarily increase the <i>Relational Cohesion</i> scores.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Assemblies that don't satisfy the Abstractness/Instability principle" Name="Assemblies that don't satisfy the Abstractness/Instability principle" Category="Architecture"><Description><![CDATA[• <i>Rule Description:</i><br> The <b>Abstractness versus Instability Diagram</b> that is shown in the NDepend report helps to assess which assemblies are <b>potentially painful to maintain</b> (i.e concrete and stable) and which assemblies are <b>potentially useless</b> (i.e abstract and instable).</br></br>
• <b>Abstractness</b>: If an assembly contains many abstract types (i.e interfaces and abstract classes) and few concrete types, it is considered as abstract.</br></br>
• <b>Stability</b>: An assembly is considered stable if its types are used by a lot of types from other assemblies. In this context stable means <i>painful to modify</i>.</br></br>
From these metrics, we define the <i>perpendicular normalized distance of an assembly from the idealized line</i> <b>A + I = 1</b> (called <i>main sequence</i>). This metric is an indicator of the assembly's balance between abstractness and stability. We precise that the word <i>normalized</i> means that the range of values is [0.0 … 1.0].</br></br>
This rule warns about assemblies with a <i>normalized distance</i> greater than than 0.7.</br></br>
This rules use the default code metric on assembly <i>Normalized Distance from the Main Sequence</i> explained here: <a href="https://www.ndepend.com/docs/code-metrics#DitFromMainSeq">https://www.ndepend.com/docs/code-metrics#DitFromMainSeq</a></br></br>
These concepts have been originally introduced by <i>Robert C. Martin</i> in 1994 in this paper: <a href="http://www.objectmentor.com/resources/articles/oodmetrc.pdf">http://www.objectmentor.com/resources/articles/oodmetrc.pdf</a> <hr> <br>• <i>How to Fix Issues:</i><br> Violations of this rule indicate assemblies with an improper <i>abstractness / stability</i> balance.</br></br>
• Either the assembly is <i>potentially painful to maintain</i> (i.e is massively used and contains mostly concrete types). This can be fixed by creating abstractions to avoid too high coupling with concrete implementations.</br></br>
• Either the assembly is <i>potentially useless</i> (i.e contains mostly abstractions and is not used enough). In such situation, the design must be reviewed to see if it can be enhanced.</br></br>
The severity of issues of this rule is <b>Low</b> because the <i>Abstractness/Instability principle</i> is an information about the code structure state but <b>is not actionable</b>, it doesn't tell precisely what to do obtain a better score.</br></br>
Fixing actionable issues of others <b>Architecture</b> and <b>Code Smells</b> default rules will necessarily push the <i>Abstractness/Instability principle</i> scores in the right direction.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Potentially Dead Types" Name="Potentially Dead Types" Category="Dead Code"><Description><![CDATA[• <i>Rule Description:</i><br> This rule lists <i>potentially</i> <b>dead types</b>. A dead type is a type that can be removed because it is never used by the program.</br></br>
This rule lists not only types not used anywhere in code, but also types used only by types not used anywhere in code. This is why this rule comes with a column <i>TypesusingMe</i> and this is why there is a code metric named <i>depth</i>:</br></br>
• A <i>depth</i> value of <i>0</i> means the type is not used.</br></br>
• A <i>depth</i> value of <i>1</i> means the type is used only by types not used.</br></br>
• etc…</br></br>
By reading the source code of this rule, you'll see that by default, <i>public</i> types are not matched, because such type might not be used by the analyzed code, but still be used by client code, not analyzed by NDepend. This default behavior can be easily changed.</br></br>
Note that this rule doesn't match Entity Framework ModelSnapshot classes that are used ony by the EF infrastructure. <hr> <br>• <i>How to Fix Issues:</i><br> <i>Static analysis</i> cannot provide an <i>exact</i> list of dead types, because there are several ways to use a type <i>dynamically</i> (like through reflection).</br></br>
For each type matched by this query, first investigate if the type is used somehow (like through reflection). If the type is really never used, it is important to remove it to avoid maintaining useless code. If you estimate the code of the type might be used in the future, at least comment it, and provide an explanatory comment about the future intentions.</br></br>
If a type is used somehow, but still is matched by this rule, you can tag it with the attribute <b>IsNotDeadCodeAttribute</b> found in <i>NDepend.API.dll</i> to avoid matching the type again. You can also provide your own attribute for this need, but then you'll need to adapt this code rule.</br></br>
Issues of this rule have a <b>Debt</b> equal to 15 minutes because it only takes a short while to investigate if a type can be safely discarded. The <b>Annual Interest</b> of issues of this rule, the annual cost to not fix such issue, is proportional to the type #lines of code, because the bigger the type is, the more it slows down maintenance.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Potentially Dead Methods" Name="Potentially Dead Methods" Category="Dead Code"><Description><![CDATA[• <i>Rule Description:</i><br> This rule lists <i>potentially</i> <b>dead methods</b>. A dead method is a method that can be removed because it is never called by the program.</br></br>
This rule lists not only methods not called anywhere in code, but also methods called only by methods not called anywhere in code. This is why this rule comes with a column <i>MethodsCallingMe</i> and this is why there is a code metric named <i>depth</i>:</br></br>
• A <i>depth</i> value of <i>0</i> means the method is not called.</br></br>
• A <i>depth</i> value of <i>1</i> means the method is called only by methods not called.</br></br>
• etc…</br></br>
By reading the source code of this rule, you'll see that by default, <i>public</i> methods are not matched, because such method might not be called by the analyzed code, but still be called by client code, not analyzed by NDepend. This default behavior can be easily changed. <hr> <br>• <i>How to Fix Issues:</i><br> <i>Static analysis</i> cannot provide an <i>exact</i> list of dead methods, because there are several ways to invoke a method <i>dynamically</i> (like through reflection).</br></br>
For each method matched by this query, first investigate if the method is invoked somehow (like through reflection). If the method is really never invoked, it is important to remove it to avoid maintaining useless code. If you estimate the code of the method might be used in the future, at least comment it, and provide an explanatory comment about the future intentions.</br></br>
If a method is invoked somehow, but still is matched by this rule, you can tag it with the attribute <b>IsNotDeadCodeAttribute</b> found in <i>NDepend.API.dll</i> to avoid matching the method again. You can also provide your own attribute for this need, but then you'll need to adapt this code rule.</br></br>
Issues of this rule have a <b>Debt</b> equal to 10 minutes because it only takes a short while to investigate if a method can be safely discarded. On top of these 10 minutes, the depth of usage of such method adds up 3 minutes per unity because dead method only called by dead code takes a bit more time to be investigated.</br></br>
The <b>Annual Interest</b> of issues of this rule, the annual cost to not fix such issue, is proportional to the type #lines of code, because the bigger the method is, the more it slows down maintenance.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Potentially Dead Fields" Name="Potentially Dead Fields" Category="Dead Code"><Description><![CDATA[• <i>Rule Description:</i><br> This rule lists <i>potentially</i> <b>dead fields</b>. A dead field is a field that can be removed because it is never used by the program.</br></br>
By reading the source code of this rule, you'll see that by default, <i>public</i> fields are not matched, because such field might not be used by the analyzed code, but still be used by client code, not analyzed by NDepend. This default behavior can be easily changed. Some others default rules in the <i>Visibility</i> group, warn about public fields.</br></br>
More restrictions are applied by this rule because of some <i>by-design</i> limitations. NDepend mostly analyzes compiled IL code, and the information that an enumeration value or a literal constant (which are fields) is used is lost in IL code. Hence by default this rule won't match such field. <hr> <br>• <i>How to Fix Issues:</i><br> <i>Static analysis</i> cannot provide an <i>exact</i> list of dead fields, because there are several ways to assign or read a field <i>dynamically</i> (like through reflection).</br></br>
For each field matched by this query, first investigate if the field is used somehow (like through reflection). If the field is really never used, it is important to remove it to avoid maintaining a useless code element.</br></br>
If a field is used somehow, but still is matched by this rule, you can tag it with the attribute <b>IsNotDeadCodeAttribute</b> found in <i>NDepend.API.dll</i> to avoid matching the field again. You can also provide your own attribute for this need, but then you'll need to adapt this code rule.</br></br>
Issues of this rule have a <b>Debt</b> equal to 10 minutes because it only takes a short while to investigate if a method can be safely discarded. The <b>Annual Interest</b> of issues of this rule, the annual cost to not fix such issue, is set by default to 8 minutes per unused field matched.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Methods that could have a lower visibility" Name="Methods that could have a lower visibility" Category="Visibility"><Description><![CDATA[• <i>Rule Description:</i><br> This rule warns about methods that can be declared with a lower visibility without provoking any compilation error. For example <i>private</i> is a visibility lower than <i>internal</i> which is lower than <i>public</i>.</br></br>
<b>Narrowing visibility</b> is a good practice because doing so <b>promotes encapsulation</b>. The scope from which methods can be called is then reduced to a minimum.</br></br>
By default, this rule doesn't match publicly visible methods that could have a lower visibility because it cannot know if the developer left the method public intentionally or not. Public methods matched are declared in non-public types.</br></br>
By default this rule doesn't match methods with the visibility <i>public</i> that could be <i>internal</i>, declared in a type that is not <i>public</i> (internal, or nested private for example) because this situation is caught by the rule <i>Avoid public methods not publicly visible</i>.</br></br>
Notice that methods tagged with one of the attribute <i>NDepend.Attributes.CannotDecreaseVisibilityAttribute</i> or <i>NDepend.Attributes.IsNotDeadCodeAttribute</i>, found in <i>NDepend.API.dll</i> are not matched. If you don't want to link <i>NDepend.API.dll</i> but still wish to rely on this facility, you can declare these attributes in your code. <hr> <br>• <i>How to Fix Issues:</i><br> Declare each matched method with the specified <i>optimal visibility</i> in the <i>CouldBeDeclared</i> rule result column.</br></br>
By default, this rule matches <i>public methods</i>. If you are publishing an API many public methods matched should remain public. In such situation, you can opt for the <i>coarse solution</i> to this problem by adding in the rule source code <i>&amp;&amp; !m.IsPubliclyVisible</i> or you can prefer the <i>finer solution</i> by tagging each concerned method with <i>CannotDecreaseVisibilityAttribute</i>.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Types that could be declared as private, nested in a parent type" Name="Types that could be declared as private, nested in a parent type" Category="Visibility"><Description><![CDATA[• <i>Rule Description:</i><br> This rule matches types that can be potentially <i>nested</i> and declared <i>private</i> into another type.</br></br>
The conditions for a type to be potentially nested into a <i>parent type</i> are:</br></br>
• the <i>parent type</i> is the only type consuming it,</br></br>
• the type and the <i>parent type</i> are declared in the same namespace.</br></br>
Declaring a type as private into a parent type <b>promotes encapsulation</b>. The scope from which the type can be consumed is then reduced to a minimum.</br></br>
This rule doesn't match classes with extension methods because such class cannot be nested in another type. <hr> <br>• <i>How to Fix Issues:</i><br> Nest each matched <i>type</i> into the specified <i>parent type</i> and declare it as private.</br></br>
However <i>nested private types</i> are hardly testable. Hence this rule might not be applied to types consumed directly by tests.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Fields should be declared as private" Name="Fields should be declared as private" Category="Visibility"><Description><![CDATA[• <i>Rule Description:</i><br> This rule matches <b>non-private and mutable fields</b>. <i>Mutable</i> means that the field value can be modified. Typically mutable fields are <i>non-constant</i>, <i>non-readonly</i> fields.</br></br>
Fields should be considered as <b>implementation details</b> and as a consequence they should be declared as private.</br></br>
If something goes wrong with a <i>non-private field</i>, the culprit can be anywhere, and so in order to track down the bug, you may have to look at quite a lot of code.</br></br>
A private field, by contrast, can only be assigned from inside the same class, so if something goes wrong with that, there is usually only one source file to look at.</br></br>
Issues of this rule are fast to get fixed, and they have a debt proportional to the number of methods assigning the field. <hr> <br>• <i>How to Fix Issues:</i><br> Declare a matched mutable field as <i>private</i>, or declare it as <i>readonly</i>.</br></br>
If code outside the type needs to access the field you can encapsulate the field accesses in a read-write property. At least with a read-write property you can set a debug breakpoint on the property setter, which makes easier to track write-accesses in case of problem.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Avoid public methods not publicly visible" Name="Avoid public methods not publicly visible" Category="Visibility"><Description><![CDATA[• <i>Rule Description:</i><br> This rule warns about methods declared as <i>public</i> whose parent type is not declared as <i>public</i>.</br></br>
In such situation <i>public</i> means, <i>can be accessed from anywhere my parent type is visible</i>. Some developers think this is an elegant language construct, some others find it misleading.</br></br>
This rule can be deactivated if you don't agree with it. Read the whole debate here: <a href="http://ericlippert.com/2014/09/15/internal-or-public/">http://ericlippert.com/2014/09/15/internal-or-public/</a></br></br>
By default issues of this rule have a <b>Low</b> severity because they reflect more an advice than a problem. <hr> <br>• <i>How to Fix Issues:</i><br> Declare the method as <i>internal</i> if it is used outside of its type, else declare it as <i>private</i>.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Fields should be marked as ReadOnly when possible" Name="Fields should be marked as ReadOnly when possible" Category="Immutability"><Description><![CDATA[• <i>Rule Description:</i><br> This rule warns about instance and static fields that can be declared as <b>readonly</b>.</br></br>
This source code of this rule is based on the conditon <i>IField.IsImmutable</i>. <a href="https://www.ndepend.com/api/webframe.html#NDepend.API~NDepend.CodeModel.IField~IsImmutable.html">https://www.ndepend.com/api/webframe.html#NDepend.API~NDepend.CodeModel.IField~IsImmutable.html</a></br></br>
A field that matches the condition <i>IsImmutable</i> is a field that is assigned only by constructors of its class.</br></br>
For an <i>instance field</i>, this means its value will remain constant through the lifetime of the object.</br></br>
For a <i>static field</i>, this means its value will remain constant through the lifetime of the program. <hr> <br>• <i>How to Fix Issues:</i><br> Declare the field with the C# <i>readonly</i> keyword (<i>ReadOnly</i> in VB.NET). This way the intention that the field value shouldn't change is made explicit.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Avoid non-readonly static fields" Name="Critical: Avoid non-readonly static fields" Category="Immutability"><Description><![CDATA[• <i>Rule Description:</i><br> This rule warns about static fields that are not declared as read-only.</br></br>
In <i>Object-Oriented-Programming</i> the natural artifact to hold states that can be modified is <b>instance fields</b>. Such mutable static fields create <i>confusion</i> about the expected state at runtime and impairs the code testability since the same mutable state is re-used for each test.</br></br>
More discussion on the topic can be found here: <a href="https://blog.ndepend.com/the-proper-usages-of-the-keyword-static-in-c/">https://blog.ndepend.com/the-proper-usages-of-the-keyword-static-in-c/</a> <hr> <br>• <i>How to Fix Issues:</i><br> If the <i>static</i> field is just assigned once in the program lifetime, make sure to declare it as <i>readonly</i> and assign it inline, or from the static constructor.</br></br>
Else if methods other than the static constructor need to assign the state hold by the static field, refactoring must occur to ensure that this state is hold through an instance field.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Avoid having different types with same name" Name="Critical: Avoid having different types with same name" Category="Naming Conventions"><Description><![CDATA[• <i>Rule Description:</i><br> This rule warns about multiple types with same name, that are defined in different <i>application</i> or <i>third-party</i> namespaces or assemblies.</br></br>
Such practice create confusion and also naming collision in source files that use different types with same name. <hr> <br>• <i>How to Fix Issues:</i><br> To fix a violation of this rule, rename concerned types.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Avoid prefixing type name with parent namespace name" Name="Avoid prefixing type name with parent namespace name" Category="Naming Conventions"><Description><![CDATA[• <i>Rule Description:</i><br> This rule warns about situations where the parent namespace name is used as the prefix of a contained type.</br></br>
For example a type named &quot;RuntimeEnvironment&quot; declared in a namespace named &quot;Foo.Runtime&quot; should be named &quot;Environment&quot;.</br></br>
Such situation creates naming redundancy with no readability gain. <hr> <br>• <i>How to Fix Issues:</i><br> To fix a violation of this rule, remove the prefix from the type name.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Avoid naming types and namespaces with the same identifier" Name="Avoid naming types and namespaces with the same identifier" Category="Naming Conventions"><Description><![CDATA[• <i>Rule Description:</i><br> This rule warns when a type and a namespace have the same name.</br></br>
For example when a type is named <i>Environment</i> and a namespace is named <i>Foo.Environment</i>.</br></br>
Such situation provokes tedious compiler resolution collision, and makes the code less readable because concepts are not concisely identified. <hr> <br>• <i>How to Fix Issues:</i><br> To fix a violation of this rule, renamed the concerned type or namespace.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Properties and fields that represent a collection of items should be named Items." Name="Properties and fields that represent a collection of items should be named Items." Category="Naming Conventions"><Description><![CDATA[• <i>Rule Description:</i><br> A good practice to make the code more readable and more predictable is to name properties and fields typed with a collection of <i>items</i> with the plural form of <i>Items</i>.</br></br>
Depending on the domain of your application, a proper identifier could be <i>NewDirectories</i>, <i>Words</i>, <i>Values</i>, <i>UpdatedDates</i>.</br></br>
Also this rule doesn't warn when any word in the identifier ends with an <i>s</i>. This way identifiers like <b>TasksToRun</b>, <b>KeysDisabled</b>, <b>VersionsSupported</b>, <b>ChildrenFilesPath</b>, <b>DatedValuesDescending</b>, <b>ApplicationNodesChanged</b> or <b>ListOfElementsInResult</b> are valid and won't be seen as violations.</br></br>
Moreover this rule won't warn for a field or property with an identifier that contain the word <b>Empty</b>. This is a common pattern to define an immutable and empty collection instance shared.</br></br>
Before inspecting properties and fields, this rule gathers application and third-party collection types that might be returned by a property or a field. To do so this rule searches types that implement <i>IEnumerable&lt;T&gt;</i> except:</br></br>
- Non generic types: Often a non generic type is not seen as a collection. For example <i>System.String</i> implements <i>IEnumerable&lt;char&gt;</i>, but a string is rarely named as a collection of characters. In others words, we have much more strings in our program named like <i>FirstName</i> than named like <i>EndingCharacters</i>.</br></br>
- Dictionaries types: A dictionary is more than a collection of pairs, it is a mapping from one domain to another. A common practice is to suffix the name of a dictionary with <i>Map</i> <i>Table</i> or <i>Dictionary</i>, although often dictionaries names satify this rule with names like <i>GuidsToPersons</i> or <i>PersonsByNames</i>. <hr> <br>• <i>How to Fix Issues:</i><br> Just rename the fields and properties accordingly, by making plural the word in the identifier that describes best the <i>items</i> in the collection.</br></br>
For example:</br></br>
- <b>ListOfDir</b> can be renamed <b>Directories</b>.</br></br>
- <b>Children</b> can be renamed <b>ChildrenItems</b></br></br>
- <b>QueueForCache</b> can be renamed <b>QueueOfItemsForCache</b>]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Avoid various capitalizations for method name" Name="Avoid various capitalizations for method name" Category="Naming Conventions"><Description><![CDATA[• <i>Rule Description:</i><br> This rule matches application methods whose names differ only in capitalization.</br></br>
With this rule you'll discover various names like <i>ProcessOrderId</i> and <i>ProcessOrderID</i>. It is important to choose a single capitalization used accross the whole application.</br></br>
Matched methods are not necessarily declared in the same type. However if various capitalizations of a method name are found within the same type, the issue severity goes from <i>Medium</i> to <i>Critical</i>. Indeed, this situation is not just a matter of convention, it is error-prone. It forces type's clients to investigate which version of the method to call. <hr> <br>• <i>How to Fix Issues:</i><br> Choose a single capitalization for the method name used accross the whole application.</br></br>
Or alternatively make the distinction clear by having different method names that don't only differ by capitalization.</br></br>
The technical-debt for each issue, the estimated cost to fix an issue, is proportional to the number of capitalizations found (2 minimum).]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Controller class name should be suffixed with 'Controller'" Name="Controller class name should be suffixed with 'Controller'" Category="Naming Conventions"><Description><![CDATA[• <i>Rule Description:</i><br> This rule warns about <i>ASP.NET Controller classes</i> whose names are not suffixed with <b>Controller</b>, this is a recommended practice: <a href="https://docs.microsoft.com/en-us/aspnet/core/mvc/controllers/actions">https://docs.microsoft.com/en-us/aspnet/core/mvc/controllers/actions</a></br></br>
For Controller base classes, the suffix <b>ControllerBase</b> is also accepted. <hr> <br>• <i>How to Fix Issues:</i><br> Suffix the names of matched Controller classes with <b>Controller</b>.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Avoid referencing source file out of Visual Studio project directory" Name="Avoid referencing source file out of Visual Studio project directory" Category="Source Files Organization"><Description><![CDATA[• <i>Rule Description:</i><br> A source file located outside of the VS project directory can be added through: <i>&gt; Add &gt; Existing Items… &gt; Add As Link</i></br></br>
Doing so can be used to share types definitions across several assemblies. This provokes type duplication at binary level. Hence maintainability is degraded and subtle versioning bug can appear.</br></br>
This rule matches types whose source files are not declared under the directory that contains the related Visual Studio project file, or under any sub-directory of this directory.</br></br>
This practice can be tolerated for certain types shared across executable assemblies. Such type can be responsible for startup related concerns, such as registering custom assembly resolving handlers or checking the .NET Framework version before loading any custom library. <hr> <br>• <i>How to Fix Issues:</i><br> To fix a violation of this rule, prefer referencing from a VS project only source files defined in sub-directories of the VS project file location.</br></br>
By default issues of this rule have a <b>Low</b> severity because they reflect more an advice than a problem.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Avoid defining multiple types in a source file" Name="Avoid defining multiple types in a source file" Category="Source Files Organization"><Description><![CDATA[• <i>Rule Description:</i><br> Defining multiple types in a single source file decreases code readability, because developers are used to see all types in a namespace, when expanding a folder in the <i>Visual Studio Solution Explorer</i>. Also doing so, leads to source files with too many lines.</br></br>
Each match of this rule is a source file that contains several types definitions, indexed by one of those types, preferably the one with the same name than the source file name without file extension, if any. <hr> <br>• <i>How to Fix Issues:</i><br> To fix a violation of this rule, create a source file for each type.</br></br>
By default issues of this rule have a <b>Low</b> severity because they reflect more an advice than a problem.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Namespace name should correspond to file location" Name="Namespace name should correspond to file location" Category="Source Files Organization"><Description><![CDATA[• <i>Rule Description:</i><br> For a solid code structure and organization, do mirror the namespaces hierarchy and the directories hierarchy containing source files.</br></br>
Doing so is a widely accepted convention, and not respecting this convention will lead to less maintainable and less browsable source code.</br></br>
This rule matches all types in such source file, whose location doesn't correspond to the type parent namespace. If a source file contains several such types (that are not necessarily in the same namespace) each type will result in a violation.</br></br>
If a type is declared in several such source files, the value for the column <i>nbSourceDeclConcerned</i> in the result, is greater than 1. The technical-debt per issue is proportional to <i>nbSourceDeclConcerned</i>.</br></br>
Notice that namespaces and directories names comparison is <b>case-sensitive</b>. A boolean <i>justACaseSensitiveIssue</i> indicates if it is just a case-sensitive issue, in which case the technical-debt is divided by two. <hr> <br>• <i>How to Fix Issues:</i><br> To fix a violation of this rule, make sure that the type parent namespace and the directory sub-paths that contains the type source file, are mirrored.</br></br>
Make sure to first check the boolean <i>justACaseSensitiveIssue</i>, in which case the issue is easier to fix.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Types with source files stored in the same directory, should be declared in the same namespace" Name="Types with source files stored in the same directory, should be declared in the same namespace" Category="Source Files Organization"><Description><![CDATA[• <i>Rule Description:</i><br> For a solid code structure and organization, do mirror the namespaces hierarchy and the directories hierarchy containing source files.</br></br>
Doing so is a widely accepted convention, and not respecting this convention will lead to less maintainable and less browsable code.</br></br>
Respecting this convention means that types with source files stored in the same directory, should be declared in the same namespace.</br></br>
For each directory that contains several source files, where most types are declared in a namespace (what we call the <b>main namespace</b>) and a few types are declared out of the <i>main namespace</i>, this code rule matches:</br></br>
• The <i>main namespace</i></br></br>
• <b>typesOutOfMainNamespace</b>: Types declared in source files in the <i>main namespace</i>'s directory but that are not in the <i>main namespace</i>.</br></br>
• <i>typesInMainNamespace</i>: And for informational purposes, types declared in source files in the <i>main namespace</i>'s directory, and that are in the <i>main namespace</i>. <hr> <br>• <i>How to Fix Issues:</i><br> Violations of this rule are types in the <i>typesOutOfMainNamespace</i> column. Typically such type …</br></br>
• … is contained in the wrong namespace but its source file is stored in the right directory. In such situation the type should be contained in <i>main namespace</i>.</br></br>
• … is contained in the right namespace but its source file is stored in the wrong directory In such situation the source file of the type must be moved to the proper parent namespace directory.</br></br>
• … is declared in multiple source files, stored in different directories. In such situation it is preferable that all source files are stored in a single directory.</br></br>
The estimated Debt, which means the effort to fix such issue, is equal to 2 minutes plus 5 minutes per type in <i>typesOutOfMainNamespace</i>.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Types declared in the same namespace, should have their source files stored in the same directory" Name="Types declared in the same namespace, should have their source files stored in the same directory" Category="Source Files Organization"><Description><![CDATA[• <i>Rule Description:</i><br> For a solid code structure and organization, do mirror the namespaces hierarchy and the directories hierarchy containing source files.</br></br>
Doing so is a widely accepted convention, and not respecting this convention will lead to less maintainable and less browsable code.</br></br>
Respecting this convention means that types declared in the same namespace, should have their source files stored in the same directory.</br></br>
For each namespace that contains types whose source files are declared in several directories, infer the <b>main directory</b>, the directory that naturally hosts source files of types, preferably the directory whose name corresponds with the namespace name. In this context, this code rule matches:</br></br>
• The namespace</br></br>
• <b>typesDeclaredOutOfMainDir</b>: types in the namespace whose source files are stored out of the <i>main directory</i>.</br></br>
• The <i>main directory</i></br></br>
• <i>typesDeclaredInMainDir</i>: for informational purposes, types declared in the namespace, whose source files are stored in the <i>main directory</i>. <hr> <br>• <i>How to Fix Issues:</i><br> Violations of this rule are types in the <b>typesDeclaredOutOfMainDir</b> column. Typically such type…</br></br>
• … is contained in the wrong namespace but its source file is stored in the right directory. In such situation the type should be contained in the namespace corresponding to the parent directory.</br></br>
• … is contained in the right namespace but its source file is stored in the wrong directory. In such situation the source file of the type must be moved to the <i>main directory</i>.</br></br>
• … is declared in multiple source files, stored in different directories. In such situation it is preferable that all source files are stored in a single directory.</br></br>
The estimated Debt, which means the effort to fix such issue, is equal to 2 minutes plus 5 minutes per type in <i>typesDeclaredOutOfMainDir</i>.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Uri fields should be of type System.Uri" Name="Uri fields should be of type System.Uri" Category="System"><Description><![CDATA[• <i>Rule Description:</i><br> A field with the name ending with <i>'Uri'</i> or <i>'Url'</i> is deemed to represent a <i>Uniform Resource Identifier or Locator</i>. Such field should be of type <b>System.Uri</b>.</br></br>
This rule matches fields with the name ending with <i>'Uri'</i> or <i>'Url'</i> that are not typed with <i>System.Uri</i>. <hr> <br>• <i>How to Fix Issues:</i><br> Rename the field, or change the field type to <i>System.Uri</i>.</br></br>
By default issues of this rule have a <b>Low</b> severity because they reflect more an advice than a problem.]]></Description></InspectionTypeInfo><InspectionTypeInfo Id="Collection properties should be read only" Name="Collection properties should be read only" Category="System.Collections"><Description><![CDATA[• <i>Rule Description:</i><br> A writable collection property allows a user to replace the collection with a completely different collection. A read-only property stops the collection from being replaced but still allows the individual members to be set. If replacing the collection is a goal, the preferred <i>design pattern</i> is to include a method to remove all the elements from the collection and a method to re-populate the collection. See the <i>Clear()</i> and <i>AddRange()</i> methods of the <i>System.Collections.Generic.List&lt;T&gt;</i> class for an example of this pattern.</br></br>
Both binary and XML serialization support read-only properties that are collections. The <i>System.Xml.Serialization.XmlSerializer</i> class has specific requirements for types that implement <i>ICollection</i> and <i>System.Collections.IEnumerable</i> in order to be serializable.</br></br>
This rule matches property setter methods that assign a collection object. <hr> <br>• <i>How to Fix Issues:</i><br> To fix a violation of this rule, make the property read-only and, if the design requires it, add methods to clear and re-populate the collection.]]></Description></InspectionTypeInfo></InspectionTypes><Inspections><InspectionInstance Id="Avoid types too big" Line="1" Severity="ERROR"><Message>Type: KillerGaming.ServerAutomation.Services.MachineService</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\MachineService.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid types with too many fields" Line="0" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.BlockDevice</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Avoid methods with too many parameters" Line="0" Severity="ERROR"><Message>Method: KillerGaming.ServerAutomation.Services.Contracts.IMachineService.AllocateMachineById(IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,String,String[])</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Avoid methods with too many parameters" Line="430" Severity="ERROR"><Message>Method: KillerGaming.ServerAutomation.Services.MachineService.AllocateMachineById(IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,String,String[])</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\MachineService.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid methods with too many parameters" Line="307" Severity="ERROR"><Message>Method: KillerGaming.ServerAutomation.API.Controllers.V2.MachineController.AllocateMachineById(IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API\Controllers\V2\MachineController.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid methods potentially poorly commented" Line="430" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.Services.MachineService.AllocateMachineById(IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,IFormFile,String,String[])</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\MachineService.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid types with poor cohesion" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.RequestModels.MachineDeployRequest</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\MachineDeployRequest.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid types with poor cohesion" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.Services.MachineService</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\MachineService.cs</FilePath></InspectionInstance><InspectionInstance Id="Class with no descendant should be sealed if possible" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.Services.HypervService</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\HypervService.cs</FilePath></InspectionInstance><InspectionInstance Id="Class with no descendant should be sealed if possible" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.Subnet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\Subnet.cs</FilePath></InspectionInstance><InspectionInstance Id="Class with no descendant should be sealed if possible" Line="0" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.FileSystem</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Class with no descendant should be sealed if possible" Line="0" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.Partition</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="A stateless class or structure might be turned into a static type" Line="0" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.Domain</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="A stateless class or structure might be turned into a static type" Line="0" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.FileSystem</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="A stateless class or structure might be turned into a static type" Line="0" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.Interface</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="A stateless class or structure might be turned into a static type" Line="0" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.Partition</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="A stateless class or structure might be turned into a static type" Line="0" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.CommissionMachineResponse</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="A stateless class or structure might be turned into a static type" Line="0" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="A stateless class or structure might be turned into a static type" Line="0" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+OwnerData</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="A stateless class or structure might be turned into a static type" Line="0" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.OwnerData</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="A stateless class or structure might be turned into a static type" Line="0" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.OwnerData</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="A stateless class or structure might be turned into a static type" Line="0" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Commission.OwnerData</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="A stateless class or structure might be turned into a static type" Line="0" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.HyperV.HypervDeleteVirtualMachineResponse</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="0" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.BlockDevice</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="0" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.Domain</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="0" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.FileSystem</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="0" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.Interface</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="0" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.Partition</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.Subnet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\Subnet.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.Vlan</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\Vlan.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.Zone</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\Zone.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="0" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.CommissionMachineResponse</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="0" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+Domain</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+Vlan</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+InterfaceSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+BootDisk</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="0" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+OwnerData</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+BlockdeviceSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+HardwareInfo</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+BootInterface</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+Pool</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+Zone</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+PhysicalblockdeviceSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+Ipv4</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+Ipv6</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+DefaultGateways</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+NumanodeSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+Root</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.Requests.MachineActionRequest</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\Requests\MachineActionRequest.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.Requests.UserCreationRequest</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\Requests\UserCreationRequest.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.HypervAdObjectResponse</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\HyperV\HypervAdObjectResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.HypervMachineResponse</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\HyperV\HypervMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.HypervNewVmResponse</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\HyperV\HypervNewVmResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Filesystem</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Partition</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.PhysicalblockdeviceSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.BlockdeviceSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="0" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.OwnerData</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.NumanodeSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Zone</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.BootDisk</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Domain</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Vlan</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Subnet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Link</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.BootInterface</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Pool</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.InterfaceSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.VirtualblockdeviceSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Ipv4</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Ipv6</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.DefaultGateways</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.VolumeGroup</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.HardwareInfo</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="0" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.HyperV.HypervDeleteVirtualMachineResponse</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.HyperV.HypervHost</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\HyperV\HypervHostResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Non-static classes should be instantiated or turned to static" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.HealthCheckResponse</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API\HealthCheckResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Methods should be declared static if possible" Line="73" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.Services.HypervService.FindVmOnHyperVHosts(String[])</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\HypervService.cs</FilePath></InspectionInstance><InspectionInstance Id="Methods should be declared static if possible" Line="384" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.Services.MachineService.GetDeployedMachines()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\MachineService.cs</FilePath></InspectionInstance><InspectionInstance Id="Methods should be declared static if possible" Line="24" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.CustomHealthChecks.SyntheticMaasCheck.CheckRemoteEndpointHealth()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API\CustomHealthChecks\SyntheticMaasCheck.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid namespaces with few types" Line="0" Severity="WARN"><Message>Namespace: KillerGaming.ServerAutomation.API.Swagger</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Avoid namespaces with few types" Line="0" Severity="WARN"><Message>Namespace: KillerGaming.ServerAutomation.API.CustomHealthChecks</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Avoid namespaces with few types" Line="0" Severity="WARN"><Message>Namespace: KillerGaming.ServerAutomation.API.DataContracts.RequestModels</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Avoid namespaces with few types" Line="0" Severity="WARN"><Message>Namespace: KillerGaming.ServerAutomation.API.DataContracts.ProblemDetails</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Avoid namespaces with few types" Line="0" Severity="WARN"><Message>Namespace: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.HyperV</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Avoid namespaces with few types" Line="0" Severity="WARN"><Message>Namespace: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Nested types should not be visible" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+Domain</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Nested types should not be visible" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+Vlan</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Nested types should not be visible" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+InterfaceSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Nested types should not be visible" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+BootDisk</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Nested types should not be visible" Line="0" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+OwnerData</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Nested types should not be visible" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+BlockdeviceSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Nested types should not be visible" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+HardwareInfo</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Nested types should not be visible" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+BootInterface</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Nested types should not be visible" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+Pool</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Nested types should not be visible" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+Zone</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Nested types should not be visible" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+PhysicalblockdeviceSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Nested types should not be visible" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+Ipv4</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Nested types should not be visible" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+Ipv6</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Nested types should not be visible" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+DefaultGateways</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Nested types should not be visible" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+NumanodeSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Nested types should not be visible" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+Root</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Instances size shouldn't be too big" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Instances size shouldn't be too big" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Commission.Root</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Commission\CommissionMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Instances size shouldn't be too big" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+Root</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Instances size shouldn't be too big" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Root</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Attribute classes should be sealed" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.Common.Attributes.CustomFilterAttribute</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.Common\Attributes\CustomFilterAttribute.cs</FilePath></InspectionInstance><InspectionInstance Id="Do implement methods that throw NotImplementedException" Line="113" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.Services.HypervService.DeleteVm(String,String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\HypervService.cs</FilePath></InspectionInstance><InspectionInstance Id="Do implement methods that throw NotImplementedException" Line="123" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.Services.HypervService.GetVmStats(String,String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\HypervService.cs</FilePath></InspectionInstance><InspectionInstance Id="Do implement methods that throw NotImplementedException" Line="128" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.Services.HypervService.TagVm(String,String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\HypervService.cs</FilePath></InspectionInstance><InspectionInstance Id="Do implement methods that throw NotImplementedException" Line="186" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.Services.HypervService.GetHosts()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\HypervService.cs</FilePath></InspectionInstance><InspectionInstance Id="Do implement methods that throw NotImplementedException" Line="221" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.Services.HypervService.KillerGaming.ServerAutomation.Services.Contracts.IComputeService.DeleteVm(String,String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\HypervService.cs</FilePath></InspectionInstance><InspectionInstance Id="Do implement methods that throw NotImplementedException" Line="378" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.Services.MachineService.DeleteMachineById(String,String,String[])</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\MachineService.cs</FilePath></InspectionInstance><InspectionInstance Id="Do implement methods that throw NotImplementedException" Line="691" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.Services.MachineService.CreateTag(TagRequest,String,String[])</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\MachineService.cs</FilePath></InspectionInstance><InspectionInstance Id="Do implement methods that throw NotImplementedException" Line="28" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.Services.UserService.UpdateAsync(User)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\UserService.cs</FilePath></InspectionInstance><InspectionInstance Id="Do implement methods that throw NotImplementedException" Line="33" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.Services.UserService.DeleteAsync(String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\UserService.cs</FilePath></InspectionInstance><InspectionInstance Id="Assemblies with poor cohesion (RelationalCohesion)" Line="1" Severity="WARN"><Message>Assembly: KillerGaming.ServerAutomation.API.DataContracts</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\Subnet.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespaces with poor cohesion (RelationalCohesion)" Line="0" Severity="WARN"><Message>Namespace: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Assemblies that don't satisfy the Abstractness/Instability principle" Line="0" Severity="WARN"><Message>Assembly: KillerGaming.ServerAutomation.Services.Contracts</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Potentially Dead Types" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.Subnet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\Subnet.cs</FilePath></InspectionInstance><InspectionInstance Id="Potentially Dead Types" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.Services.HypervService</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\HypervService.cs</FilePath></InspectionInstance><InspectionInstance Id="Potentially Dead Methods" Line="28" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.Services.HypervService.HealthCheck(String[])</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\HypervService.cs</FilePath></InspectionInstance><InspectionInstance Id="Potentially Dead Methods" Line="52" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.Services.HypervService.GetHosts(String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\HypervService.cs</FilePath></InspectionInstance><InspectionInstance Id="Potentially Dead Methods" Line="73" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.Services.HypervService.FindVmOnHyperVHosts(String[])</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\HypervService.cs</FilePath></InspectionInstance><InspectionInstance Id="Potentially Dead Methods" Line="113" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.Services.HypervService.DeleteVm(String,String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\HypervService.cs</FilePath></InspectionInstance><InspectionInstance Id="Potentially Dead Fields" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.size</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Potentially Dead Fields" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.partition</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Potentially Dead Fields" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.partitions</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Potentially Dead Fields" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.fileSystem</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Potentially Dead Fields" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.partitionTableType</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Potentially Dead Fields" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.path</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Potentially Dead Fields" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.usedFor</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Potentially Dead Fields" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.blockSize</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Potentially Dead Fields" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.name</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Potentially Dead Fields" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.model</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Potentially Dead Fields" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.resourceUri</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Potentially Dead Fields" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.type</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Potentially Dead Fields" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.tags</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Potentially Dead Fields" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.serial</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Potentially Dead Fields" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.uuid</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Potentially Dead Fields" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.id</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Potentially Dead Fields" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.idPath</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Potentially Dead Fields" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.usedSize</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Potentially Dead Fields" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.availableSize</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Potentially Dead Fields" Line="1" Severity="WARN"><Message>Field: KillerGaming.ServerAutomation.API.Controllers.V2.HypervController._logger</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API\Controllers\V2\HypervController.cs</FilePath></InspectionInstance><InspectionInstance Id="Potentially Dead Fields" Line="1" Severity="WARN"><Message>Field: KillerGaming.ServerAutomation.API.Controllers.V2.HypervController._mapper</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API\Controllers\V2\HypervController.cs</FilePath></InspectionInstance><InspectionInstance Id="Potentially Dead Fields" Line="1" Severity="WARN"><Message>Field: KillerGaming.ServerAutomation.API.Controllers.V2.StatusControllerV2._healthCheckService</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API\Controllers\V2\StatusControllerV2.cs</FilePath></InspectionInstance><InspectionInstance Id="Methods that could have a lower visibility" Line="28" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.Services.HypervService.HealthCheck(String[])</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\HypervService.cs</FilePath></InspectionInstance><InspectionInstance Id="Methods that could have a lower visibility" Line="52" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.Services.HypervService.GetHosts(String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\HypervService.cs</FilePath></InspectionInstance><InspectionInstance Id="Types that could be declared as private, nested in a parent type" Line="0" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.FileSystem</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Types that could be declared as private, nested in a parent type" Line="0" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.Partition</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Fields should be declared as private" Line="1" Severity="WARN"><Message>Field: KillerGaming.ServerAutomation.API.DataContracts.RequestModels.MachineDeployRequest.blockDeviceSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\MachineDeployRequest.cs</FilePath></InspectionInstance><InspectionInstance Id="Fields should be declared as private" Line="1" Severity="WARN"><Message>Field: KillerGaming.ServerAutomation.API.DataContracts.RequestModels.MachineDeployRequest.cpuCount</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\MachineDeployRequest.cs</FilePath></InspectionInstance><InspectionInstance Id="Fields should be declared as private" Line="1" Severity="WARN"><Message>Field: KillerGaming.ServerAutomation.API.DataContracts.RequestModels.MachineDeployRequest.hweKernel</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\MachineDeployRequest.cs</FilePath></InspectionInstance><InspectionInstance Id="Fields should be declared as private" Line="1" Severity="WARN"><Message>Field: KillerGaming.ServerAutomation.API.DataContracts.RequestModels.MachineDeployRequest.disableIpv4</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\MachineDeployRequest.cs</FilePath></InspectionInstance><InspectionInstance Id="Fields should be declared as private" Line="1" Severity="WARN"><Message>Field: KillerGaming.ServerAutomation.API.DataContracts.RequestModels.MachineDeployRequest.interfaceSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\MachineDeployRequest.cs</FilePath></InspectionInstance><InspectionInstance Id="Fields should be declared as private" Line="1" Severity="WARN"><Message>Field: KillerGaming.ServerAutomation.API.DataContracts.RequestModels.MachineDeployRequest.nodeTypeName</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\MachineDeployRequest.cs</FilePath></InspectionInstance><InspectionInstance Id="Fields should be declared as private" Line="1" Severity="WARN"><Message>Field: KillerGaming.ServerAutomation.API.DataContracts.RequestModels.MachineDeployRequest.powerState</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\MachineDeployRequest.cs</FilePath></InspectionInstance><InspectionInstance Id="Fields should be declared as private" Line="1" Severity="WARN"><Message>Field: KillerGaming.ServerAutomation.API.DataContracts.RequestModels.MachineDeployRequest.nodeType</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\MachineDeployRequest.cs</FilePath></InspectionInstance><InspectionInstance Id="Fields should be declared as private" Line="1" Severity="WARN"><Message>Field: KillerGaming.ServerAutomation.API.DataContracts.RequestModels.MachineDeployRequest.statusMessage</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\MachineDeployRequest.cs</FilePath></InspectionInstance><InspectionInstance Id="Fields should be declared as private" Line="1" Severity="WARN"><Message>Field: KillerGaming.ServerAutomation.API.DataContracts.RequestModels.MachineDeployRequest.minHweKernel</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\MachineDeployRequest.cs</FilePath></InspectionInstance><InspectionInstance Id="Fields should be declared as private" Line="1" Severity="WARN"><Message>Field: KillerGaming.ServerAutomation.API.DataContracts.RequestModels.MachineDeployRequest.physicalBlockDeviceSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\MachineDeployRequest.cs</FilePath></InspectionInstance><InspectionInstance Id="Fields should be declared as private" Line="1" Severity="WARN"><Message>Field: KillerGaming.ServerAutomation.API.DataContracts.RequestModels.MachineDeployRequest.netboot</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\MachineDeployRequest.cs</FilePath></InspectionInstance><InspectionInstance Id="Fields should be declared as private" Line="1" Severity="WARN"><Message>Field: KillerGaming.ServerAutomation.API.DataContracts.RequestModels.MachineDeployRequest.statusAction</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\MachineDeployRequest.cs</FilePath></InspectionInstance><InspectionInstance Id="Fields should be declared as private" Line="1" Severity="WARN"><Message>Field: KillerGaming.ServerAutomation.API.DataContracts.RequestModels.MachineDeployRequest.statusName</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\MachineDeployRequest.cs</FilePath></InspectionInstance><InspectionInstance Id="Fields should be declared as private" Line="1" Severity="WARN"><Message>Field: KillerGaming.ServerAutomation.API.DataContracts.RequestModels.MachineDeployRequest.domain</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\MachineDeployRequest.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid public methods not publicly visible" Line="28" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.Services.HypervService.HealthCheck(String[])</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\HypervService.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid public methods not publicly visible" Line="52" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.Services.HypervService.GetHosts(String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\HypervService.cs</FilePath></InspectionInstance><InspectionInstance Id="Fields should be marked as ReadOnly when possible" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.size</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Fields should be marked as ReadOnly when possible" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.partition</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Fields should be marked as ReadOnly when possible" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.partitions</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Fields should be marked as ReadOnly when possible" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.fileSystem</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Fields should be marked as ReadOnly when possible" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.partitionTableType</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Fields should be marked as ReadOnly when possible" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.path</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Fields should be marked as ReadOnly when possible" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.usedFor</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Fields should be marked as ReadOnly when possible" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.blockSize</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Fields should be marked as ReadOnly when possible" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.name</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Fields should be marked as ReadOnly when possible" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.model</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Fields should be marked as ReadOnly when possible" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.resourceUri</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Fields should be marked as ReadOnly when possible" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.type</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Fields should be marked as ReadOnly when possible" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.tags</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Fields should be marked as ReadOnly when possible" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.serial</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Fields should be marked as ReadOnly when possible" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.uuid</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Fields should be marked as ReadOnly when possible" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.id</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Fields should be marked as ReadOnly when possible" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.idPath</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Fields should be marked as ReadOnly when possible" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.usedSize</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Fields should be marked as ReadOnly when possible" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.availableSize</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Fields should be marked as ReadOnly when possible" Line="1" Severity="WARN"><Message>Field: KillerGaming.ServerAutomation.Services.MachineService._settings</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\MachineService.cs</FilePath></InspectionInstance><InspectionInstance Id="Fields should be marked as ReadOnly when possible" Line="1" Severity="WARN"><Message>Field: KillerGaming.ServerAutomation.Services.UserService._settings</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\UserService.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid non-readonly static fields" Line="1" Severity="ERROR"><Message>Field: KillerGaming.ServerAutomation.Services.MachineService.ALLOCATE_URL</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\MachineService.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid non-readonly static fields" Line="1" Severity="ERROR"><Message>Field: KillerGaming.ServerAutomation.Services.MachineService.COMMISSION_URL</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\MachineService.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid non-readonly static fields" Line="1" Severity="ERROR"><Message>Field: KillerGaming.ServerAutomation.Services.MachineService.DEPLOYMENT_URL</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\MachineService.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid non-readonly static fields" Line="1" Severity="ERROR"><Message>Field: KillerGaming.ServerAutomation.Services.MachineService.POWERUP_URL</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\MachineService.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid non-readonly static fields" Line="1" Severity="ERROR"><Message>Field: KillerGaming.ServerAutomation.Services.MachineService.POWEROFF_URL</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\MachineService.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid non-readonly static fields" Line="1" Severity="ERROR"><Message>Field: KillerGaming.ServerAutomation.Services.MachineService.MACHINES_URL</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\MachineService.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid non-readonly static fields" Line="1" Severity="ERROR"><Message>Field: KillerGaming.ServerAutomation.Services.MachineService.UPDATENODES_URL</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\MachineService.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid non-readonly static fields" Line="1" Severity="ERROR"><Message>Field: KillerGaming.ServerAutomation.Services.MachineService.RELEASE_URL</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\MachineService.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid having different types with same name" Line="1" Severity="ERROR"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Commission.Domain</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Commission\CommissionMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid having different types with same name" Line="1" Severity="ERROR"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Commission.Vlan</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Commission\CommissionMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid having different types with same name" Line="1" Severity="ERROR"><Message>Type: KillerGaming.ServerAutomation.IoC.Configuration.DI.ServiceCollectionExtensions</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.IoC.Configuration\DI\ServiceCollectionExtensions.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid having different types with same name" Line="1" Severity="ERROR"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Partition</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid having different types with same name" Line="1" Severity="ERROR"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Subnet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid having different types with same name" Line="1" Severity="ERROR"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Commission.BootDisk</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Commission\CommissionMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid having different types with same name" Line="1" Severity="ERROR"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Commission.BootInterface</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Commission\CommissionMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid having different types with same name" Line="1" Severity="ERROR"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Commission.HardwareInfo</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Commission\CommissionMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid having different types with same name" Line="1" Severity="ERROR"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Commission.NumanodeSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Commission\CommissionMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid having different types with same name" Line="0" Severity="ERROR"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Commission.OwnerData</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Avoid having different types with same name" Line="1" Severity="ERROR"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Commission.Pool</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Commission\CommissionMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid having different types with same name" Line="1" Severity="ERROR"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Zone</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid having different types with same name" Line="1" Severity="ERROR"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.Address</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\Address.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid having different types with same name" Line="1" Severity="ERROR"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.User</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\User.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid having different types with same name" Line="1" Severity="ERROR"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Filesystem</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid having different types with same name" Line="1" Severity="ERROR"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Link</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid having different types with same name" Line="1" Severity="ERROR"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Commission.DefaultGateway</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Commission\CommissionMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid having different types with same name" Line="1" Severity="ERROR"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.VolumeGroup</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid having different types with same name" Line="1" Severity="ERROR"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Commission.Root</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Commission\CommissionMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid prefixing type name with parent namespace name" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.Common.Settings.SettingsExtensions</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.Common\Settings\SettingsExtensions.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid prefixing type name with parent namespace name" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid naming types and namespaces with the same identifier" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.Common.Settings.Swagger</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.Common\Settings\AppSettings.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid naming types and namespaces with the same identifier" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Properties and fields that represent a collection of items should be named Items." Line="14" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.HealthResult.get_Info()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API\HealthResult.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="7" Severity="WARN"><Message>Method: KillerGaming.ServerProvisioning.Models.Zone.get_description()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\Zone.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="7" Severity="WARN"><Message>Method: KillerGaming.ServerProvisioning.Models.Zone.set_description(String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\Zone.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="46" Severity="WARN"><Message>Method: KillerGaming.ServerProvisioning.Models.Subnet.get_name()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\Subnet.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="46" Severity="WARN"><Message>Method: KillerGaming.ServerProvisioning.Models.Subnet.set_name(String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\Subnet.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="48" Severity="WARN"><Message>Method: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+InterfaceSet.get_enabled()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="48" Severity="WARN"><Message>Method: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+InterfaceSet.set_enabled(Boolean)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="476" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Subnet.get_Space()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="476" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Subnet.set_Space(String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="452" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Subnet.get_RdnsMode()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="452" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Subnet.set_RdnsMode(Int64)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="11" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.User.get_Id()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\User.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="11" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.User.set_Id(String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\User.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="455" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Subnet.get_GatewayIp()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="455" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Subnet.set_GatewayIp(String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="371" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootInterface.get_Vlan()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="371" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootInterface.set_Vlan(Vlan)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="464" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Subnet.get_AllowProxy()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="464" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Subnet.set_AllowProxy(Boolean)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="227" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.get_ResourceUri()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="227" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.set_ResourceUri(String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="449" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Subnet.get_Cidr()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="449" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Subnet.set_Cidr(String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="458" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Subnet.get_DnsServers()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="458" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Subnet.set_DnsServers(String[])</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="509" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Vlan.get_Fabric()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="509" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Vlan.set_Fabric(String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="494" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Vlan.get_ExternalDhcp()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="494" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Vlan.set_ExternalDhcp(Object)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="485" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Vlan.get_Vid()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="485" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Vlan.set_Vid(Int64)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="491" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Vlan.get_DhcpOn()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="491" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Vlan.set_DhcpOn(Boolean)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="518" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Vlan.get_SecondaryRack()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="518" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Vlan.set_SecondaryRack(Object)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="503" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Vlan.get_PrimaryRack()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="503" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Vlan.set_PrimaryRack(String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="488" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Vlan.get_Mtu()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="488" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Vlan.set_Mtu(Int64)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="536" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Domain.get_Authoritative()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="536" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Domain.set_Authoritative(Boolean)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="539" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Domain.get_Ttl()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="539" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Domain.set_Ttl(Object)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="422" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootInterface.get_Parents()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="422" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootInterface.set_Parents(Object[])</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="380" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootInterface.get_Vendor()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="380" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootInterface.set_Vendor(String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="368" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootInterface.get_Links()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="368" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootInterface.set_Links(Link[])</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="248" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootDisk.get_Type()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="248" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootDisk.set_Type(String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="398" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootInterface.get_Discovered()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="398" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootInterface.set_Discovered(Object[])</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="242" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootDisk.get_Tags()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="242" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootDisk.set_Tags(String[])</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="413" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootInterface.get_Children()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="413" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootInterface.set_Children(Object[])</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="395" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootInterface.get_Params()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="395" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootInterface.set_Params(String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="404" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootInterface.get_Product()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="404" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootInterface.set_Product(String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="245" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootDisk.get_Filesystem()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="245" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootDisk.set_Filesystem(Filesystem)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="272" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootDisk.get_Model()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="272" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootDisk.set_Model(String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="284" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootDisk.get_Path()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="284" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootDisk.set_Path(String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="251" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootDisk.get_Uuid()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="251" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootDisk.set_Uuid(Nullable&lt;Guid&gt;)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="236" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootDisk.get_Size()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="236" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootDisk.set_Size(Int64)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="269" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootDisk.get_Serial()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="269" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootDisk.set_Serial(String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="290" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootDisk.get_Partitions()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="290" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootDisk.set_Partitions(Partition[])</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="590" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.NumanodeSet.get_Index()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="590" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.NumanodeSet.set_Index(Int64)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="179" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.get_Memory()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="179" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.set_Memory(Int64)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="596" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.NumanodeSet.get_Cores()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="596" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.NumanodeSet.set_Cores(Int64[])</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="26" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.get_Fqdn()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="26" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.set_Fqdn(String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="131" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.get_Bcaches()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="131" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.set_Bcaches(Object[])</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="137" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.get_Domain()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="137" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.set_Domain(Domain)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="173" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.get_Architecture()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="173" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.set_Architecture(String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="17" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.get_Storage()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="17" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.set_Storage(Double)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="16" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.HypervNewVmResponse.get_Status()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\HyperV\HypervNewVmResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="16" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.HypervNewVmResponse.set_Status(String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\HyperV\HypervNewVmResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="113" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.get_Netboot()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="113" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.set_Netboot(Boolean)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="128" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.get_Pod()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="128" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.set_Pod(Object)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="155" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.get_Osystem()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="155" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.set_Osystem(String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="41" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.get_Pool()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="41" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.set_Pool(Pool)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="152" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.get_Locked()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="152" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.set_Locked(Boolean)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="47" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.get_Raids()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="47" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.set_Raids(Object[])</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="59" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.get_Owner()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="59" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.set_Owner(String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="80" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.get_Zone()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="80" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.set_Zone(Pool)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="197" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.get_Hostname()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="197" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.set_Hostname(String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="209" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.get_TagNames()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="209" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.set_TagNames(Object[])</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="35" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.get_SwapSize()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="35" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release.set_SwapSize(Object)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="12" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Filesystem.get_fstype()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="12" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Filesystem.set_fstype(String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="13" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Filesystem.get_label()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="13" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Filesystem.set_label(Object)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="23" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Partition.get_bootable()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="23" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Partition.set_bootable(Boolean)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="179" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Link.get_mode()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="179" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Link.set_mode(String)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="180" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Link.get_subnet()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="180" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Link.set_subnet(Subnet)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="170" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Subnet.get_managed()</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid various capitalizations for method name" Line="170" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Subnet.set_managed(Boolean)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Controller class name should be suffixed with 'Controller'" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.Controllers.V2.StatusControllerV2</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API\Controllers\V2\StatusControllerV2.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.Common.Settings.AppSettings</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.Common\Settings\AppSettings.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.Common.Settings.ApiSettings</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.Common\Settings\AppSettings.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.Common.Settings.ApiContact</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.Common\Settings\AppSettings.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.Common.Settings.ApiLicense</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.Common\Settings\AppSettings.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.Common.Settings.Swagger</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.Common\Settings\AppSettings.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.Common.Settings.SettingsExtensions</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.Common\Settings\SettingsExtensions.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.Common.Middlewares.ErrorHandlingMiddleware</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.Common\Middlewares\ExceptionHandlerActions.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.Common.Attributes.CustomFilterAttribute</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.Common\Attributes\CustomFilterAttribute.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.Common.Attributes.SwaggerDefaultValues</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.Common\Attributes\SwaggerDefaultValues.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.Subnet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\Subnet.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.Vlan</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\Vlan.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.Zone</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\Zone.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+Domain</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+Vlan</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+InterfaceSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+BootDisk</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+BlockdeviceSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+HardwareInfo</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+BootInterface</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+Pool</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+Zone</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+PhysicalblockdeviceSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+Ipv4</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+Ipv6</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+DefaultGateways</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+NumanodeSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+Root</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ProblemDetails.MachineNotFoundProblemDetail</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ProblemDetails\MachineNotFoundProblemDetail.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.Address</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\Address.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.User</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\User.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.Requests.MachineActionRequest</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\Requests\MachineActionRequest.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.Requests.MachinePowerRequest</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\Requests\MachinePowerRequest.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.Requests.MachineReleaseRequest</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\Requests\MachineReleaseRequest.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.Requests.MachineUpdateRequest</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\Requests\MachineUpdateRequest.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.Requests.TagRequest</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\Requests\TagRequest.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.Requests.UserCreationRequest</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\Requests\UserCreationRequest.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.RequestModels.MachineComisionRequest</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\MachineComisionRequest.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.RequestModels.MachineDeployRequest</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\MachineDeployRequest.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.HypervAdObjectResponse</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\HyperV\HypervAdObjectResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.HypervMachineResponse</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\HyperV\HypervMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.HypervNewVmResponse</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\HyperV\HypervNewVmResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.StatusResponse</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\StatusResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootDisk</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Filesystem</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Partition</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootInterface</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Link</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Subnet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Vlan</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.DefaultGateway</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Domain</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.HardwareInfo</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.NumanodeSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Pool</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.VolumeGroup</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Filesystem</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Partition</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.PhysicalblockdeviceSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.BlockdeviceSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.NumanodeSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Zone</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.BootDisk</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Domain</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Vlan</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Subnet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Link</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.BootInterface</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Pool</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.InterfaceSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.VirtualblockdeviceSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Ipv4</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Ipv6</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.DefaultGateways</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.VolumeGroup</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.HardwareInfo</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Root</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Commission.Root</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Commission\CommissionMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Commission.BootDisk</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Commission\CommissionMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Commission.BootInterface</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Commission\CommissionMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Commission.Vlan</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Commission\CommissionMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Commission.DefaultGateway</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Commission\CommissionMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Commission.Domain</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Commission\CommissionMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Commission.HardwareInfo</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Commission\CommissionMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Commission.NumanodeSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Commission\CommissionMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Commission.Pool</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Commission\CommissionMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.HyperV.HypervHost</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\HyperV\HypervHostResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.Services.Model.Address</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services.Model\Address.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.Services.Model.User</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services.Model\User.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.Services.HypervService</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\HypervService.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.Services.MaasService</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\MaasService.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.Services.MachineService</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\MachineService.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.Services.UserService</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Services\UserService.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.IoC.Configuration.DI.ServiceCollectionExtensions</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.IoC.Configuration\DI\ServiceCollectionExtensions.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.IoC.Configuration.AutoMapper.Profiles.APIMappingProfile</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.IoC.Configuration\AutoMapper\Profiles\APIMappingProfile.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.IoC.Configuration.AutoMapper.Profiles.ServicesMappingProfile</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.IoC.Configuration\AutoMapper\Profiles\ServicesMappingProfile.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.Tools.EnvironmentUtils</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Tools\EnvironmentUtils.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.Tools.Configurations.ConfigurationHelper</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.Tools\Configurations\ConfigurationHelper.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.HealthCheckExtensions</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API\HealthCheckExtensions.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.HealthCheckResponse</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API\HealthCheckResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.HealthInfo</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API\HealthInfo.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.HealthResult</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API\HealthResult.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.Program</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API\Program.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.Swagger.ConfigureSwaggerOptions</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API\Swagger\ConfigureSwaggerOptions.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.CustomHealthChecks.SyntheticMaasCheck</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API\CustomHealthChecks\SyntheticMaasCheck.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.Controllers.V2.HypervController</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API\Controllers\V2\HypervController.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.Controllers.V2.Maas2Controller</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API\Controllers\V2\Maas2Controller.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.Controllers.V2.MachineController</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API\Controllers\V2\MachineController.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid referencing source file out of Visual Studio project directory" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.Controllers.V2.StatusControllerV2</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API\Controllers\V2\StatusControllerV2.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid defining multiple types in a source file" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.Common.Settings.AppSettings</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.Common\Settings\AppSettings.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid defining multiple types in a source file" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid defining multiple types in a source file" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Filesystem</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Avoid defining multiple types in a source file" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Commission.Root</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Commission\CommissionMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.Subnet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\Subnet.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.Vlan</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\Vlan.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.Zone</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\Zone.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+Domain</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+Vlan</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+InterfaceSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+BootDisk</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+BlockdeviceSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+HardwareInfo</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+BootInterface</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+Pool</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+Zone</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+PhysicalblockdeviceSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+Ipv4</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+Ipv6</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+DefaultGateways</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+NumanodeSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ResponseModels.MachineResponse+Root</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerProvisioning.Models.ProblemDetails.MachineNotFoundProblemDetail</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ProblemDetails\MachineNotFoundProblemDetail.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Release</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootDisk</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Filesystem</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Partition</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.BootInterface</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Link</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Subnet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Vlan</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.DefaultGateway</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Domain</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.HardwareInfo</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.NumanodeSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.Pool</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Release.VolumeGroup</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Release\ReleaseResponseModel.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Filesystem</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Partition</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.PhysicalblockdeviceSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.BlockdeviceSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.NumanodeSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Zone</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.BootDisk</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Domain</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Vlan</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Subnet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Link</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.BootInterface</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Pool</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.InterfaceSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.VirtualblockdeviceSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Ipv4</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Ipv6</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.DefaultGateways</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.VolumeGroup</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.HardwareInfo</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Deploy.Root</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Deploy\DeployMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Commission.Root</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Commission\CommissionMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Commission.BootDisk</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Commission\CommissionMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Commission.BootInterface</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Commission\CommissionMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Commission.Vlan</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Commission\CommissionMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Commission.DefaultGateway</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Commission\CommissionMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Commission.Domain</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Commission\CommissionMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Commission.HardwareInfo</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Commission\CommissionMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Commission.NumanodeSet</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Commission\CommissionMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Namespace name should correspond to file location" Line="1" Severity="WARN"><Message>Type: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels.Commission.Pool</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\ResponseModels\MAAS\Commission\CommissionMachineResponse.cs</FilePath></InspectionInstance><InspectionInstance Id="Types with source files stored in the same directory, should be declared in the same namespace" Line="0" Severity="WARN"><Message>Namespace: KillerGaming.ServerProvisioning.Models</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Types with source files stored in the same directory, should be declared in the same namespace" Line="0" Severity="WARN"><Message>Namespace: KillerGaming.ServerProvisioning.Models.ResponseModels</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Types with source files stored in the same directory, should be declared in the same namespace" Line="0" Severity="WARN"><Message>Namespace: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Types declared in the same namespace, should have their source files stored in the same directory" Line="0" Severity="WARN"><Message>Namespace: KillerGaming.ServerAutomation.API.DataContracts.ResponseModels</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Uri fields should be of type System.Uri" Line="0" Severity="WARN"><Message>Field: KillerGaming.ServerProvisioning.Models.BlockDevice.resourceUri</Message><FilePath>UnknownLocation</FilePath></InspectionInstance><InspectionInstance Id="Collection properties should be read only" Line="33" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.DataContracts.RequestModels.MachineDeployRequest.set_tagNames(String[])</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API.DataContracts\RequestModels\MachineDeployRequest.cs</FilePath></InspectionInstance><InspectionInstance Id="Collection properties should be read only" Line="14" Severity="WARN"><Message>Method: KillerGaming.ServerAutomation.API.HealthResult.set_Info(ICollection&lt;HealthInfo&gt;)</Message><FilePath>C:\Repos\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation\KillerGaming.ServerAutomation.API\HealthResult.cs</FilePath></InspectionInstance></Inspections></InspectionsExport>